//Завдання 1 (Церазя)
//
//Ключ дата народження+ номер по журналу 09 + 2 = 11

//Зашифрувати текст на екран вивести:
//1-й рядок - фраза для шифрування;
//2-й рядок - номери букв фрази для шифрування в українському (англійському)
//алфавіті;
//3-й рядок - номери букв фрази для шифрування, збільшені на крок;
//4-й рядок - зашифрована фраза.

//Варіант 2. Алгоритм для якої-небудь задачі називається:
//- Терміністичним (таким, що завершуються), якщо він завжди, для всіх
//допустимих послідовностей кроків закінчується після кінцевого числа кроків;
//- детерміністичним, якщо немає ніякої свободи у виборі чергового кроку
//обробки;
//- Детермінованим, якщо результат алгоритму визначений однозначно;
//- послідовним, якщо кроки обробки завжди виконуються один за одним;
//- рівнобіжним, якщо деякі кроки обробки виконуються одночасно.

use std::collections::VecDeque;

fn main() {
    let word_to_crypt = "hello";
    let mut alphabet = ('a'..='z').collect::<VecDeque<char>>();
    println!("Alphabet {:?}", alphabet);
    let indexes = word_to_crypt
        .chars()
        .map(|ch| alphabet.binary_search(&ch).unwrap())
        .collect::<Vec<usize>>();
    let shifter = 11;
    alphabet.rotate_right(shifter);

    println!("Shifted  {:?}", alphabet);
    println!("Indexes  {:?}", indexes);

    let crypted = indexes
        .into_iter()
        .map(|idx| alphabet[idx])
        .collect::<String>();

    println!("Crypted  {:#?}", crypted);
}
